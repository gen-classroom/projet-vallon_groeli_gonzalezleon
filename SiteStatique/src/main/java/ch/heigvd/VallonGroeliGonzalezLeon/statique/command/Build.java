package ch.heigvd.VallonGroeliGonzalezLeon.statique.command;


import ch.heigvd.VallonGroeliGonzalezLeon.statique.command.api.MdAPI;
import ch.heigvd.VallonGroeliGonzalezLeon.statique.util.Util;
import org.apache.commons.io.FileUtils;
import picocli.CommandLine;

import java.io.File;
import java.io.IOException;
import java.util.concurrent.Callable;


@CommandLine.Command(name = "build", mixinStandardHelpOptions = true,
                     description = "Builds the site using the given markdown and json files. This command needs to be" +
                                   " executed at the root of the directory generated by the init command.\n" +
                                   "If there are any images that are in the same directory as the markdown and json " +
                                   "files, they will be copied to the corresponding build file.\n" +
                                   "In case of error the command will return 2 and clean the build directory.\n")
public class Build implements Callable<Integer> {

   @Override
   public Integer call() {
      File currentDirectory;
      try {
         currentDirectory = new File(new File(".").getCanonicalPath());
      } catch (IOException e) {
         System.err.println("Error while reading current directory");
         e.printStackTrace();
         return 2;
      }
      File buildDirectory = new File(currentDirectory.getPath() + "\\build");
      buildDirectory.mkdir();

      //Creation of the index file
      if (MdAPI.createIndexPage(buildDirectory, currentDirectory) != 0 &&
          Util.copyImages(currentDirectory, buildDirectory) != 0) {
         try {
            FileUtils.deleteDirectory(buildDirectory);
         } catch (IOException e) {
            e.printStackTrace();
            System.out.println("Build directory deletion failure.");
         }
         return 2;
      }

      return 0;
   }


}